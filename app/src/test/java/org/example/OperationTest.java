/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.example.domain.Character;
import org.example.service.GameService;
import org.example.service.impl.GameServiceImpl;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class OperationTest {

    private GameService gameService;
    private String playerName;
    private Character character;

    @BeforeEach
    public void setUp() {
        gameService = new GameServiceImpl();
        playerName = "player_1";
        character = gameService.createCharacter(playerName);
    }

    @Test
    void whenMoveRight_ThenUpdateLocation() {
        gameService.move(character, 1, 0);

        assertEquals(1, character.getLocationX());
        assertEquals(1, gameService.queryCurrentCharacter().getLocationX());
        assertEquals(0, character.getLocationY());
        assertEquals(0, gameService.queryCurrentCharacter().getLocationY());
    }

    @Test
    void whenMoveDownAndLeft_ThenUpdateLocation() {
        gameService.move(character, 0, -1);
        gameService.move(character, -1, 0);

        assertEquals(-1, character.getLocationX());
        assertEquals(-1, gameService.queryCurrentCharacter().getLocationX());
        assertEquals(-1, character.getLocationY());
        assertEquals(-1, gameService.queryCurrentCharacter().getLocationY());
    }

    @Test
    void whenReachBoundary_ThenStops() {
        character.setLocationX(Integer.MAX_VALUE);
        character.setLocationY(Integer.MIN_VALUE);
        gameService.move(character, 1, 0);
        gameService.move(character, 0, -1);

        assertEquals(Integer.MAX_VALUE, gameService.queryCurrentCharacter().getLocationX());
        assertEquals(Integer.MIN_VALUE, gameService.queryCurrentCharacter().getLocationY());
    }
}
